name: release

on:
  push:
    tags: [ 'v*' ]
    branches-ignore: [ '*' ]
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.ref, '-auto')"
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest release tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git tag -l "v*" --sort=-v:refname | grep -vE "-auto$" | head -n 1)
          echo "Latest tag: $LATEST_TAG"
          NEW_TAG="${LATEST_TAG}-auto"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "::set-output name=new_tag::$NEW_TAG"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update app version in build.gradle
        run: |
          # 从新标签中提取版本号（去除v前缀和-auto后缀）
          VERSION_NAME=$(echo "${{ env.NEW_TAG }}" | sed 's/^v//; s/-auto$//')
          echo "Updating version name to: $VERSION_NAME"
          # 更新app模块的build.gradle中的版本号
          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME-auto\"/" app/build.gradle
          # 更新 OpenList 版本号
          echo "SET OPENLIST VERSION TO" ${LATEST_OPENLIST_VERSION}
          sed -i "s/\(public static String OPENLIST_VERSION = \"\)\([^\";]*\)\(\";\)/\1${LATEST_OPENLIST_VERSION}\3/" ../../app/src/main/java/com/leohao/android/alistlite/util/Constants.java

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Create new tag
        run: |
          git config --global user.email "2867555086@github.com"
          git config --global user.name "LeoHaoVIP"
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: ${{ env.NEW_TAG }}
          release_name: Auto Release ${{ env.NEW_TAG }}
          body: |
            Auto-generated release based on ${{ env.NEW_TAG }}
          files: app/build/outputs/apk/release/*${{ env.NEW_TAG }}*.apk
